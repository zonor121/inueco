"""
Разработать программу "Научный калькулятор", состоящую из трех модулей. 
Каждый модуль должен выполнять строго определенные функции и взаимодействовать 
с другими модулями через четко определенные интерфейсы.

Требования:
Реализовать модульную архитектуру с четким разделением ответственности
Применять функции модуля math для математических операций
Обеспечить обработку ошибок и проверку входных данных
Соблюдать принцип единственной ответственности для каждого модуля

2. Спецификация модулей
Модуль 1: calculator.py (Математическое ядро)
Задачи:

Реализовать базовые арифметические операции:
Сложение, вычитание, умножение, деление
Проверка деления на ноль с выбрасыванием исключения
Реализовать научные операции с использованием math:
Возведение в степень
Квадратный корень (с проверкой отрицательного входного значения)
Натуральный логарифм и логарифм по произвольному основанию
Тригонометрические функции (синус, косинус, тангенс)
Факториал (с проверкой неотрицательного целого числа)

Требования к функциям:
Все функции должны проверять корректность входных параметров
При ошибках - выбрасывать исключения с понятными сообщениями
Каждая функция должна возвращать результат вычислений

Модуль 2: utils.py (Вспомогательные утилиты)
Задачи:
Реализовать утилиты преобразования единиц измерения:
Функция преобразования градусов в радианы
Функция преобразования радианов в градусы

Реализовать утилиты форматирования вывода:
Функция форматирования математических операций для красивого вывода
Функция создания строки с результатом вычисления

Реализовать утилиты для работы с данными:
Функция проверки числа на целость
Функция проверки числа на положительность

Требования:
Все функции должны возвращать новые данные, не изменяя входные параметры
Функции должны быть независимыми и самодостаточными

Модуль 3: main.py (Основная программа)
Задачи:
Организовать демонстрацию работы всех модулей:
Импортировать необходимые функции из других модулей
Продемонстрировать работу базовых и научных операций

Реализовать тестовые сценарии:
Демонстрация работы с отдельными математическими операциями
Примеры корректных вычислений и обработки ошибок
Примеры работы с тригонометрическими функциями

Организовать структурированный вывод:
Отдельные секции для разных типов операций
Четкое отображение входных данных и результатов
Вывод сообщений об ошибках при некорректных операциях
Показать взаимодействие между модулями:
Использование функций из calculator.py для вычислений
Применение утилит из utils.py для преобразования и форматирования

3. Примеры тестовых сценариев для main.py
Арифметические операции с разными числами
Вычисление квадратных корней из положительных чисел и обработка попытки извлечения корня из отрицательного числа
Работа с тригонометрическими функциями (вычисление синуса, косинуса для углов в градусах и радианах)
Вычисление факториалов для разных чисел
Примеры с обработкой ошибок (деление на ноль, логарифм от отрицательного числа)
"""
